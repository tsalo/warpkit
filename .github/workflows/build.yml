name: Build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: 
      - published

jobs:
  wheels-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-versions: [
          {version: '3.8', glob: cp38*},
          {version: '3.9', glob: cp39*},
          {version: '3.10', glob: cp310*},
          {version: '3.11', glob: cp311*},
          {version: '3.12', glob: cp312*},
          ]
    name: Python ${{ matrix.python-versions.version }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build wheel
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: ${{ matrix.python-versions.glob }}
      - name: Set up Julia 1.9.4
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.9.4'
      - name: Add Julia shared libraries
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo ${RUNNER_TOOL_CACHE}/julia/$(julia -e "print(VERSION)")/x64/lib | sudo tee -a /etc/ld.so.conf.d/julia.conf
            sudo ldconfig
          fi;
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions.version }}
      - name: Install wheel
        run: |
          python -m pip install ./wheelhouse/*${{ matrix.python-versions.glob }}.whl
          python -m pip install pytest pybids
      - name: Test wheel
        run: |
          pushd tests/data && ./download_bids_testdata.sh && popd
          if [ "$RUNNER_OS" == "macOS" ]; then
            export DYLD_LIBRARY_PATH=${RUNNER_TOOL_CACHE}/julia/$(julia -e "print(VERSION)")/x64/lib
          fi;
          pytest --import-mode=append
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  sdist-build:
    name: Make sdist
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Julia 1.9.4
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.9.4'
      - name: Add Julia shared libraries
        run: |
          echo ${RUNNER_TOOL_CACHE}/julia/$(julia -e "print(VERSION)")/x64/lib | sudo tee -a /etc/ld.so.conf.d/julia.conf
          sudo ldconfig
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
  py-publish:
    name: Publish to PyPI
    needs: [wheels-build, sdist-build]
    runs-on: ubuntu-22.04
    environment:
      name: release
      url: https://pypi.org/project/warpkit/
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
  docker-build:
    name: Build Docker image
    needs: [wheels-build, sdist-build]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/vanandrew/warpkit:latest,ghcr.io/vanandrew/warpkit:${{ github.ref_name }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
